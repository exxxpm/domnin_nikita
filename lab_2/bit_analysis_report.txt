Отчет о Лабораторной Работе №2
Генерация Случайных Последовательностей

Для начала были реализованы и протестированы собственные генераторы случайных последовательностей на C++ и Java.
Полученные последовательности были представлены в виде бинарных строк:
"cpp_generator": "10110110010111100010000011101110111110000101010101110100101011101111101111010001111101001011100011100001101011001110011011111100",
"java_generator": "00110111110111010110011110110101100011000101011100010110100010110111101011001001011110000101110000001100111011100010100011011011"

После этого были проведены три теста NIST для оценки статистических свойств последовательностей:

Частотный побитовый тест:
Этот тест проверяет, насколько хорошо распределены биты в последовательности.
Близкие к 0 значения p-value могут указывать на неслучайные последовательности.
Тест на одинаковые подряд идущие биты:
Этот тест определяет, есть ли в последовательности длинные серии одинаковых битов, что может свидетельствовать о недостаточной случайности.
Тест на самую длинную последовательность единиц в блоке:
Этот тест анализирует наличие слишком длинных последовательностей единиц в строке, что также может указывать на неслучайные закономерности.

Результаты тестов для обеих последовательностей представлены ниже:

Для последовательности, сгенерированной на C++:

Частотный побитовый тест: 0.0771
Тест на одинаковые подряд идущие биты: 0.9188
Тест на самую длинную последовательность единиц в блоке: 0.1664
Для последовательности, сгенерированной на Java:

Частотный побитовый тест: 0.3768
Тест на одинаковые подряд идущие биты: 0.5465
Тест на самую длинную последовательность единиц в блоке: 0.2593

Вывод:
На основании результатов тестов можно предположить, что обе сгенерированные последовательности достаточно случайны, хотя некоторые тесты могут указывать на небольшие отклонения от идеальной случайности. Для более точной оценки требуется дополнительный анализ.